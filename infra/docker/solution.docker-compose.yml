# Complete Docker Compose Solution
# This is a reference implementation for the AI Support Chat application

version: '3.8'

services:
  postgres:
    image: postgres:16
    ports:
      - '5432:5432'
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ../../apps/frontend
    ports:
      - '3000:3000'
    depends_on:
      - api-gateway
      - llm-service
    env_file:
      - ./.env
    environment:
      - REACT_APP_API_URL=http://api-gateway:3001
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    build:
      context: ../../apps/api-gateway
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      llm-service:
        condition: service_started
    env_file:
      - ./.env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - LLM_SERVICE_URL=http://llm-service:8000
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  llm-service:
    build:
      context: ../../apps/llm-service
    ports:
      - '8000:8000'
    env_file:
      - ./.env
    environment:
      - OLLAMA_API_URL=http://ollama:11434
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    ports:
      - '11434:11434'
    volumes:
      - ollama_data:/root/.ollama
    container_name: ollama
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local

networks:
  app-network:
    driver: bridge
